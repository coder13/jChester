/*
 *  jChester - v0.1.0
 *  A time entry component for speedcubing solves.
 *  https://github.com/jfly/jChester
 *
 *  Made by Jeremy Fleischman
 *  Under GPL-3.0 License
 */
!function(a){a.fn.jChester=function(b,c){a.isPlainObject(b)&&(c=b,b=null);var d=this,e=a.extend({},a.fn.jChester.defaults,c),f=this.data("datepicker");if(!f){f={},this.data("datepicker",f),f.$formGroup=a('<div class="form-group">'),d.append(f.$formGroup),f.$input=a('<input class="form-control">'),f.$formGroup.append(f.$input),f.$helpBlock=a('<span class="help-block">'),f.$formGroup.append(f.$helpBlock);var g=function(){var b=f.$input.val();try{var c=a.parseClockFormat(b);f.solveTime=c,f.$helpBlock.text(""),f.$formGroup.removeClass("has-warning")}catch(d){f.solveTime=null,f.$helpBlock.text(d),f.$formGroup.addClass("has-warning")}};f.$input.on("input",function(){g(),d.trigger("solveTimeInput",[f.solveTime])}),f.$input.on("keydown",function(a){13===a.which&&(g(),d.trigger("solveTimeChange",[f.solveTime]))})}return"getSolveTime"===b?f.solveTime:(e.solveTime&&f.$input.val(a.toClockFormat(e.solveTime)),d)},a.fn.jChester.defaults={solveTime:null};var b=1e3,c=60*b;a.extend({parseClockFormat:function(a){if("DNF"===a.toUpperCase())return{penalties:"DNF"};if("DNS"===a.toUpperCase())return{penalties:"DNS"};var d=a.match(/^(?:(\d*):)?(\d+)(?:[.,](\d*))?$/);if(!d)throw"Invalid clock format";var e=parseInt(d[1]||"0"),f=parseInt(d[2]),g=d[3]||"",h=parseInt(g||"0"),i=Math.pow(10,h.toString().length-3),j=h?Math.round(h/i):0,k=e*c+f*b+j,l=Math.min(3,g.length);return{millis:k,decimals:l}},toClockFormat:function(a){function b(a,b,c){for(var d=a+"";d.length<c;)d=b+d;return d}if(a.penalties&&a.penalties.indexOf("DNF")>=0)return"DNF";if(a.penalties&&a.penalties.indexOf("DNS")>=0)return"DNS";var c=a.millis,d=Math.floor(c/6e4);c%=6e4;var e=Math.floor(c/1e3);c%=1e3;var f;f=d?d+":"+b(e,"0",2):""+e;var g=a.decimals;if(g>0){g=Math.min(3,g);var h=b(c,"0",3);f+=".";for(var i=0;g>i;i++)f+=h.charAt(i)}return f}})}(jQuery);