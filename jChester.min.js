/*
 *  jChester - v0.4.3
 *  A time entry component for speedcubing solves.
 *  https://github.com/jfly/jChester
 *
 *  Made by Jeremy Fleischman
 *  Under GPL-3.0 License
 */
!function(a){function b(a){return 0===a.length?!1:+a%1===0}var c=75,d=45;a.fn.jChester=function(e,f){if(!this.is("div"))throw"jChester can only be applied to divs";a.isPlainObject(e)&&(f=e,e=null);var g=["millis","moveCount","puzzlesSolvedCount","puzzlesAttemptedCount"],h=this,i=a.extend({},a.fn.jChester.defaults,f),j=this.data("datepicker");j||(j={},this.data("datepicker",j),j.$form=a('<form class="form-inline" role="form">'),h.append(j.$form),j.$form.append(a('<div class="form-group"><input name="millis" type="text" class="form-control"></input></div>')),j.$form.append(a('<div class="form-group"><input name="moveCount" min="0" type="number" class="form-control"></input></div>')),j.$form.append(document.createTextNode(" ")),j.$form.append(a('<div class="form-group"><input name="puzzlesSolvedCount" min="0" type="number" class="form-control"></input></div>')),j.$form.append(a('<div class="form-group">&nbsp;/&nbsp;<input name="puzzlesAttemptedCount" min="0" type="number" class="form-control"></input></div>')),j.$form.append(a('<span class="help-block">')),j.$form.find('input[type="text"]').width(c),j.$form.find('input[type="number"]').width(d),j.$form.find(".form-group").css({display:"inline-block"}),j.inputChanged=function(){var c,d={},e=j.$form.find('input[name="millis"]').val();try{c=a.stopwatchFormatToSolveTime(e)}catch(f){c={},d.millis=0===e.length?"Please enter a time":f}var h=j.$form.find('input[name="moveCount"]').val();if(b(h)){var i=parseInt(h);c.moveCount=i}else d.moveCount="Invalid move count";var k=j.$form.find('input[name="puzzlesSolvedCount"]').val();if(b(k)){var l=parseInt(k);c.puzzlesSolvedCount=l}else d.puzzlesSolvedCount="Invalid number of puzzles solved";var m=j.$form.find('input[name="puzzlesAttemptedCount"]').val();if(b(m)){var n=parseInt(m);c.puzzlesAttemptedCount=n,!d.puzzlesSolvedCount&&c.puzzlesSolvedCount>c.puzzlesAttemptedCount&&(d.puzzlesAttemptedCount="Cannot have more puzzles solved than attemped")}else d.puzzlesAttemptedCount="Invalid number of puzzles attempted";var o=function(a){return j.editableSolveTimeFields[a]?d[a]:null},p=g.filter(o).map(o);p.length>0&&(c=null),j.solveTime=c,j.$form.find(".help-block").text(p.join(". ")),j.$form.find(".input-group").removeClass("has-error"),g.forEach(function(a){var b=j.$form.find('input[name="'+a+'"]'),c=b.parent(".form-group"),e=!!d[a];c.toggleClass("has-error",e)})},j.$form.find("input").on("input",function(){j.inputChanged(),h.trigger("solveTimeInput",[j.solveTime])}),j.$form.find("input").on("keydown",function(a){13===a.which&&(j.inputChanged(),h.trigger("solveTimeChange",[j.solveTime]))}),this.attr("tabindex","-1"),this.focus(function(){a(this).find("input").first().focus()}));var k=function(b){null===b?(j.$form.find('input[name="millis"]').val(""),j.$form.find('input[name="moveCount"]').val(""),j.$form.find('input[name="puzzlesSolvedCount"]').val(""),j.$form.find('input[name="puzzlesAttemptedCount"]').val(""),j.inputChanged()):b&&(j.$form.find('input[name="millis"]').val(a.solveTimeToStopwatchFormat(b)),j.$form.find('input[name="moveCount"]').val(b.moveCount),j.$form.find('input[name="puzzlesSolvedCount"]').val(b.puzzlesSolvedCount),j.$form.find('input[name="puzzlesAttemptedCount"]').val(b.puzzlesAttemptedCount),j.inputChanged())};if("getSolveTime"===e)return j.solveTime;if("setSolveTime"===e){var l=arguments[1];return void k(l)}if(e)throw"Unrecognized method: "+e;return j.editableSolveTimeFields=i.editableSolveTimeFields,g.forEach(function(a){var b=!!j.editableSolveTimeFields[a];j.$form.find('input[name="'+a+'"]').parent().toggle(b)}),k(i.solveTime),h},a.fn.jChester.defaults={solveTime:null,editableSolveTimeFields:{millis:!0}};var e=1e3,f=60*e;a.extend({stopwatchFormatToSolveTime:function(a){if("DNF"===a.toUpperCase())return{puzzlesSolvedCount:0,puzzlesAttemptedCount:1};if("DNS"===a.toUpperCase())return{puzzlesSolvedCount:0,puzzlesAttemptedCount:0};var b=a.match(/^(?:(\d*):)?(\d+)(?:[.,](\d*))?$/);if(!b)throw"Invalid stopwatch format";var c=parseInt(b[1]||"0"),d=parseInt(b[2]),g=b[3]||"",h=parseInt(g||"0"),i=Math.pow(10,h.toString().length-3),j=h?Math.round(h/i):0,k=c*f+d*e+j,l=Math.min(3,g.length);return{millis:k,decimals:l}},solveTimeIsDNF:function(a){if("undefined"!=typeof a.puzzlesSolvedCount&&"undefined"!=typeof a.puzzlesAttemptedCount)if(1===a.puzzlesAttemptedCount){if(0===a.puzzlesSolvedCount)return!0}else if(a.puzzlesAttemptedCount>1){var b=a.puzzlesAttemptedCount-a.puzzlesSolvedCount,c=a.puzzlesSolvedCount-b;if(0>c||1===a.puzzlesSolvedCount)return!0}return!1},solveTimeIsDNS:function(a){return"undefined"!=typeof a.puzzlesAttemptedCount&&0===a.puzzlesAttemptedCount?!0:!1},solveTimeToStopwatchFormat:function(b){function c(a,b,c){for(var d=a+"";d.length<c;)d=b+d;return d}if(a.solveTimeIsDNF(b))return"DNF";if(a.solveTimeIsDNS(b))return"DNS";var d=b.millis,e=Math.floor(d/6e4);d%=6e4;var f=Math.floor(d/1e3);d%=1e3;var g;g=e?e+":"+c(f,"0",2):""+f;var h=b.decimals;if(h>0){h=Math.min(3,h);var i=c(d,"0",3);g+=".";for(var j=0;h>j;j++)g+=i.charAt(j)}return g}})}(jQuery);