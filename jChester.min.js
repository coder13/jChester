/*
 *  jChester - v0.6.0
 *  A time entry component for speedcubing solves.
 *  https://github.com/jfly/jChester
 *
 *  Made by Jeremy Fleischman
 *  Under GPL-3.0 License
 */
!function(a){function b(a){return 0===a.length?!1:+a%1===0}var c=80,d=45;a.fn.jChester=function(e,f){if(!this.is("div"))throw"jChester can only be applied to divs";a.isPlainObject(e)&&(f=e,e=null);var g=["millis","moveCount","puzzlesSolvedCount","puzzlesAttemptedCount"],h=this,i=a.extend({},a.fn.jChester.defaults,f),j=this.data("datepicker");j||(j={},this.data("datepicker",j),j.$form=a('<form class="form-inline" role="form">'),h.append(j.$form),j.$form.append(a('<div class="form-group"><input type="text" name="millis-mask" class="form-control" readonly tabindex="-1"></input><input name="millis" type="text" class="form-control"></input></div>')),j.$form.find('input[name="millis-mask"]').css({position:"absolute",backgroundColor:"white",fontFamily:"monospace",textAlign:"right"}),j.$form.find('input[name="millis"]').css({position:"relative",backgroundColor:"transparent",fontFamily:"monospace",textAlign:"right"}),j.$form.append(a('<div class="form-group"><input name="moveCount" type="text" class="form-control"></input></div>')),j.$form.append(document.createTextNode(" ")),j.$form.append(a('<div class="form-group"><input name="puzzlesSolvedCount" min="0" type="number" class="form-control"></input></div>')),j.$form.append(a('<span name="puzzlesAttemptedCount">&nbsp;/&nbsp;</span>')),j.$form.append(a('<div class="form-group"><input name="puzzlesAttemptedCount" min="0" type="number" class="form-control"></input></div>')),j.$form.append(a('<span class="help-block">')),j.$form.find('input[type="text"]').width(c),j.$form.find('input[type="number"]').width(d),j.$form.find(".form-group").css({display:"inline-block"}),j.inputChanged=function(){var c={},d={};if(j.editableSolveTimeFields.millis){var e=j.$form.find('input[name="millis"]'),f=j.$form.find('input[name="millis-mask"]'),h=e.val();if(h=h.replace(/ /g,""),h.match(/^\d+$/)){var i=7;h.length>i&&(h=h.substring(0,i));var k=h.length,l=h.substring(k-2,k),m=h.substring(k-4,k-2),n=h.substring(k-6,k-4),o=h.substring(0,k-6),p="",q="",r=function(a,b){for(var c=0;c<b-a.length;c++)p+=" ",q+="0";p+=a,q+=a};o.length>0&&(r(o,1),r(":",0)),n.length>0&&(r(n,q.length>0?2:1),r(":",0)),r(m,q.length>0?2:1),r(".",0),r(l,2),e.val(p.replace(/[.:]/g," ")),f.val(q),h=p.replace(/ /g,"0")}else h!==e.val()&&e.val(h),f.val("");try{a.extend(d,a.stopwatchFormatToSolveTime(h))}catch(s){c.millis=0===h.length?"Please enter a time.":s}}if(j.editableSolveTimeFields.moveCount){var t=j.$form.find('input[name="moveCount"]').val();try{a.extend(d,a.stopwatchFormatToSolveTime(t,!0))}catch(s){c.moveCount=0===t.length?"Please enter a number of moves.":s}}var u,v;if(j.hideField={},a.solveTimeIsDNF(d))u="0",v="1",j.hideField.puzzlesSolvedCount=!0,j.hideField.puzzlesAttemptedCount=!0;else if(a.solveTimeIsDNS(d))u="0",v="0",j.hideField.puzzlesSolvedCount=!0,j.hideField.puzzlesAttemptedCount=!0;else if(j.editableSolveTimeFields.puzzlesSolvedCount||j.editableSolveTimeFields.puzzlesAttemptedCount){var w=j.$form.find('input[name="puzzlesSolvedCount"]');u=w.val();var x=j.$form.find('input[name="puzzlesAttemptedCount"]');v=x.val()}else u="1",v="1";if(b(u)){var y=parseInt(u);d.puzzlesSolvedCount=y}else c.puzzlesSolvedCount="Invalid number of puzzles solved.";if(b(v)){var z=parseInt(v);d.puzzlesAttemptedCount=z,!c.puzzlesSolvedCount&&d.puzzlesSolvedCount>d.puzzlesAttemptedCount&&(c.puzzlesAttemptedCount="Cannot have more puzzles solved than attemped.")}else c.puzzlesAttemptedCount="Invalid number of puzzles attempted.";var A=function(a){return c[a]},B=g.filter(A).map(A);B.length>0&&(d=null),j.solveTime=d,j.$form.find(".help-block").text(B.join(" ")),j.$form.find(".input-group").removeClass("has-error"),g.forEach(function(a){var b=j.$form.find('input[name="'+a+'"]'),d=b.parent(".form-group"),e=!!c[a];d.toggleClass("has-error",e)}),g.forEach(function(a){var b=j.editableSolveTimeFields[a]&&!j.hideField[a];b=!!b,j.$form.find('input[name="'+a+'"]').parent().toggle(b),j.$form.find('span[name="'+a+'"]').toggle(b)})},j.$form.find("input").on("input",function(){j.inputChanged(),h.trigger("solveTimeInput",[j.solveTime])}),j.$form.find("input").on("keydown",function(b){var c=a(b.currentTarget);("millis"===c.attr("name")||"moveCount"===c.attr("name"))&&!b.altKey&&!b.ctrlKey&!b.metaKey&&(106===b.which||68===b.which?(c.val("DNF"),c.select(),j.inputChanged(),h.trigger("solveTimeInput",[j.solveTime]),b.preventDefault()):(111===b.which||83===b.which)&&(c.val("DNS"),c.select(),j.inputChanged(),h.trigger("solveTimeInput",[j.solveTime]),b.preventDefault()))}),this.attr("tabindex","-1"),this.focus(function(){var b=a(this).find("input:visible:not([readonly])").first();b.focus(),b.select()}));var k=function(b){if(null===b)j.$form.find('input[name="millis"]').val(""),j.$form.find('input[name="moveCount"]').val(""),j.$form.find('input[name="puzzlesSolvedCount"]').val(""),j.$form.find('input[name="puzzlesAttemptedCount"]').val(""),j.inputChanged();else if(b){var c="";a.solveTimeIsDNF(b)?c="DNF":a.solveTimeIsDNS(b)&&(c="DNS");var d;d=b.millis?a.solveTimeToStopwatchFormat(b,!0):c,j.$form.find('input[name="millis"]').val(d);var e;e=b.moveCount?b.moveCount:c,j.$form.find('input[name="moveCount"]').val(e),j.$form.find('input[name="puzzlesSolvedCount"]').val(b.puzzlesSolvedCount),j.$form.find('input[name="puzzlesAttemptedCount"]').val(b.puzzlesAttemptedCount),j.inputChanged()}};if("getSolveTime"===e)return j.solveTime;if("setSolveTime"===e){var l=arguments[1];return void k(l)}if(e)throw"Unrecognized method: "+e;return j.editableSolveTimeFields=i.editableSolveTimeFields,j.inputChanged(),k(i.solveTime),h},a.fn.jChester.defaults={solveTime:null,editableSolveTimeFields:{millis:!0}};var e=1e3,f=60*e,g=60*f;a.extend({stopwatchFormatToSolveTime:function(a,c){if(0===a.length)throw"Input must be nonempty.";if("DNF"===a.toUpperCase())return{puzzlesSolvedCount:0,puzzlesAttemptedCount:1};if("DNS"===a.toUpperCase())return{puzzlesSolvedCount:0,puzzlesAttemptedCount:0};if(c){if(!b(a))throw"Invalid move count.";var d=parseInt(a);if(0>=d)throw"Move count must be greater than zero.";return{moveCount:d}}var h=a.match(/^(?:(\d*):)??(?:(\d*):)?(\d+)?(?:[.,](\d*))?$/);if(!h)throw"Invalid stopwatch format.";var i=parseInt(h[1]||"0"),j=parseInt(h[2]||"0"),k=parseInt(h[3]||"0"),l=h[4]||"",m=parseInt(l||"0"),n=Math.pow(10,l.length-3),o=m?Math.round(m/n):0,p=i*g+j*f+k*e+o,q=Math.min(3,l.length);return{millis:p,decimals:q}},solveTimeIsDNF:function(a){if("undefined"!=typeof a.puzzlesSolvedCount&&"undefined"!=typeof a.puzzlesAttemptedCount)if(1===a.puzzlesAttemptedCount){if(0===a.puzzlesSolvedCount)return!0}else if(a.puzzlesAttemptedCount>1){var b=a.puzzlesAttemptedCount-a.puzzlesSolvedCount,c=a.puzzlesSolvedCount-b;if(0>c||1===a.puzzlesSolvedCount)return!0}return!1},solveTimeIsDNS:function(a){return"undefined"!=typeof a.puzzlesAttemptedCount&&0===a.puzzlesAttemptedCount?!0:!1},solveTimeToStopwatchFormat:function(b,c){function d(a,b,c){for(var d=a+"";d.length<c;)d=b+d;return d}if(!c){if(a.solveTimeIsDNF(b))return"DNF";if(a.solveTimeIsDNS(b))return"DNS"}var h=b.millis,i=Math.floor(h/g);h%=g;var j=Math.floor(h/f);h%=f;var k=Math.floor(h/e);h%=e;var l="";l.length>0?l+=":"+d(i,"0",2):i&&(l+=i),l.length>0?l+=":"+d(j,"0",2):j&&(l+=j),l+=l.length>0?":"+d(k,"0",2):k;var m=b.decimals;if(m>0){m=Math.min(3,m);var n=d(h,"0",3);l+=".";for(var o=0;m>o;o++)l+=n.charAt(o)}return l}})}(jQuery);